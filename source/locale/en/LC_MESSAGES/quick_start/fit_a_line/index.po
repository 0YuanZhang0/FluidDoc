# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, paddle-dev@baidu.com
# This file is distributed under the same license as the PaddlePaddle Fluid
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddlePaddle Fluid 0.13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-15 16:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/quick_start/fit_a_line/index.md:1
msgid "线性回归"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:2
msgid ""
"让我们从经典的线性回归（Linear Regression "
"[1]）模型开始这份教程。在这一章里，你将使用真实的数据集建立起一个房价预测模型，并且了解到机器学习中的若干重要概念。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:4
msgid "本教程源代码目录在book/fit_a_line， 初次使用请参考PaddlePaddle安装教程，更多内容请参考本教程的视频课堂。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:6
msgid "背景介绍"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:7
msgid ""
"给定一个大小为$n$的数据集  ${{y_{i}, x_{i1}, ..., x_{id}}}{i=1}^{n}$，其中$x{i1}, "
"\\ldots, "
"x_{id}$是第$i$个样本$d$个属性上的取值，$y_i$是该样本待预测的目标。线性回归模型假设目标$y_i$可以被属性间的线性组合描述，即"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:9
msgid ""
"$$y_i = \\omega_1x_{i1} + \\omega_2x_{i2} + \\ldots + \\omega_dx_{id} + "
"b,  i=1,\\ldots,n$$"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:11
msgid ""
"例如，在我们将要建模的房价预测问题里，$x_{ij}$是描述房子$i$的各种属性（比如房间的个数、周围学校和医院的个数、交通状况等），而 "
"$y_i$是房屋的价格。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:13
msgid "初看起来，这个假设实在过于简单了，变量间的真实关系很难是线性的。但由于线性回归模型有形式简单和易于建模分析的优点，它在实际问题中得到了大量的应用。很多经典的统计学习、机器学习书籍[2,3,4]也选择对线性模型独立成章重点讲解。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:15
msgid "效果展示"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:16
msgid ""
"我们使用从UCI Housing Data "
"Set获得的波士顿房价数据集进行模型的训练和预测。下面的散点图展示了使用模型对部分房屋价格进行的预测。其中，每个点的横坐标表示同一类房屋真实价格的中位数，纵坐标表示线性回归模型根据特征预测的结果，当二者值完全相等的时候就会落在虚线上。所以模型预测得越准确，则点离虚线越近。"
" alt"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:22
msgid "模型概览"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:24
msgid "模型定义"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:26
msgid ""
"在波士顿房价数据集中，和房屋相关的值共有14个：前13个用来描述房屋相关的各种信息，即模型中的 "
"$x_i$；最后一个值为我们要预测的该类房屋价格的中位数，即模型中的 $y_i$。因此，我们的模型就可以表示成："
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:28
msgid ""
"$$\\hat{Y} = \\omega_1X_{1} + \\omega_2X_{2} + \\ldots + "
"\\omega_{13}X_{13} + b$$"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:30
msgid ""
"$\\hat{Y}$ 表示模型的预测结果，用来和真实值$Y$区分。模型要学习的参数即：$\\omega_1, \\ldots, "
"\\omega_{13}, b$。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:32
msgid ""
"建立模型后，我们需要给模型一个优化目标，使得学到的参数能够让预测值$\\hat{Y}$尽可能地接近真实值$Y$。这里我们引入损失函数（Loss "
"Function，或Cost Function）这个概念。 "
"输入任意一个数据样本的目标值$y_{i}$和模型给出的预测值$\\hat{y_{i}}$，损失函数输出一个非负的实值。这个实值通常用来反映模型误差的大小。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:34
msgid "对于线性回归模型来讲，最常见的损失函数就是均方误差（Mean Squared Error， MSE）了，它的形式是："
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:36
msgid "$$MSE=\\frac{1}{n}\\sum_{i=1}^{n}{(\\hat{Y_i}-Y_i)}^2$$"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:38
msgid "即对于一个大小为$n$的测试集，$MSE$是$n$个数据预测结果误差平方的均值。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:40
msgid "训练过程"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:42
msgid "定义好模型结构之后，我们要通过以下几个步骤进行模型训练"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:48
msgid "数据集"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:50
msgid "数据集接口的封装"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:51
msgid "首先加载需要的包"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:58
msgid "我们通过uci_housing模块引入了数据集合UCI Housing Data Set"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:60
msgid "其中，在uci_housing模块中封装了："
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:66
msgid "数据集介绍"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:67
msgid "这份数据集共506行，每行包含了波士顿郊区的一类房屋的相关信息及该类房屋价格的中位数。其各维属性的意义如下："
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:151
msgid "数据预处理"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:152
msgid "连续值与离散值"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:153
msgid "观察一下数据，我们的第一个发现是：所有的13维属性中，有12维的连续值和1维的离散值（CHAS）。离散值虽然也常使用类似0、1、2这样的数字表示，但是其含义与连续值是不同的，因为这里的差值没有实际意义。例如，我们用0、1、2来分别表示红色、绿色和蓝色的话，我们并不能因此说“蓝色和红色”比“绿色和红色”的距离更远。所以通常对一个有$d$个可能取值的离散属性，我们会将它们转为$d$个取值为0或1的二值属性或者将每个可能取值映射为一个多维向量。不过就这里而言，因为CHAS本身就是一个二值属性，就省去了这个麻烦。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:155
msgid "属性的归一化"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:156
msgid ""
"另外一个稍加观察即可发现的事实是，各维属性的取值范围差别很大（如图2所示）。例如，属性B的取值范围是[0.32, "
"396.90]，而属性NOX的取值范围是[0.3850, "
"0.8170]。这里就要用到一个常见的操作-归一化（normalization）了。归一化的目标是把各位属性的取值范围放缩到差不多的区间，例如[-0.5,0.5]。这里我们使用一种很常见的操作方法：减掉均值，然后除以原取值范围。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:158
msgid "做归一化（或 Feature scaling）至少有以下3个理由："
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:163
msgid "alt"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:168
msgid "整理训练集与测试集"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:169
msgid "我们将数据集分割为两份：一份用于调整模型的参数，即进行模型的训练，模型在这份数据集上的误差被称为训练误差；另外一份被用来测试，模型在这份数据集上的误差被称为测试误差。我们训练模型的目的是为了通过从训练数据中找到规律来预测未知的新数据，所以测试误差是更能反映模型表现的指标。分割数据的比例要考虑到两个因素：更多的训练数据会降低参数估计的方差，从而得到更可信的模型；而更多的测试数据会降低测试误差的方差，从而得到更可信的测试误差。我们这个例子中设置的分割比例为$8:2$"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:172
msgid "在更复杂的模型训练过程中，我们往往还会多使用一种数据集：验证集。因为复杂的模型中常常还有一些超参数（Hyperparameter）需要调节，所以我们会尝试多种超参数的组合来分别训练多个模型，然后对比它们在验证集上的表现选择相对最好的一组超参数，最后才使用这组参数下训练的模型在测试集上评估测试误差。由于本章训练的模型比较简单，我们暂且忽略掉这个过程。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:174
msgid "训练"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:176
msgid "fit_a_line/trainer.py演示了训练的整体过程。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:178
msgid "初始化PaddlePaddle"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:184
msgid "模型配置"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:186
msgid ""
"线性回归的模型其实就是一个采用线性激活函数（linear activation，LinearActivation）的全连接层（fully-"
"connected layer，fc_layer）："
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:197
msgid "保存网络拓扑"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:206
msgid "创建参数"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:212
msgid "创建Trainer"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:222
msgid "读取数据且打印训练的中间信息"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:224
msgid ""
"PaddlePaddle提供一个 reader机制 来读取数据。 Reader返回的数据可以包括多列，我们需要一个Python dict把列 "
"序号映射到网络里的数据层。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:233
msgid "此外，我们还可以提供一个 event handler，来打印训练的进度："
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:285
msgid "开始训练"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:298
msgid "png"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:300
msgid "应用模型"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:302
msgid "1. 生成测试数据"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:316
msgid "2. 推测 inference"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:331
msgid "总结"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:332
msgid "在这章里，我们借助波士顿房价这一数据集，介绍了线性回归模型的基本概念，以及如何使用PaddlePaddle实现训练和测试的过程。很多的模型和技巧都是从简单的线性回归模型演化而来，因此弄清楚线性模型的原理和局限非常重要。"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:335
msgid "参考文献"
msgstr ""

#: ../../source/quick_start/fit_a_line/index.md:341
msgid ""
"<br/> <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-"
"sa/4.0/\"><img alt=\"知识共享许可协议\" style=\"border-width:0\" "
"src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" /></a><br "
"/><span xmlns:dct=\"http://purl.org/dc/terms/\" "
"href=\"http://purl.org/dc/dcmitype/Text\" property=\"dct:title\" "
"rel=\"dct:type\">本教程</span> 由 <a "
"xmlns:cc=\"http://creativecommons.org/ns#\" "
"href=\"http://book.paddlepaddle.org\" property=\"cc:attributionName\" "
"rel=\"cc:attributionURL\">PaddlePaddle</a> 创作，采用 <a rel=\"license\" "
"href=\"http://creativecommons.org/licenses/by-sa/4.0/\">知识共享 署名-相同方式共享 "
"4.0 国际 许可协议</a>进行许可。"
msgstr ""

