# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, paddle-dev@baidu.com
# This file is distributed under the same license as the PaddlePaddle Fluid
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddlePaddle Fluid 0.13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-14 18:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api_reference/metrics.rst:6
msgid "metrics"
msgstr ""

#: ../../source/api_reference/metrics.rst:9
msgid "MetricBase"
msgstr ""

#: of paddle.fluid.metrics.MetricBase:1
msgid "Base Class for all evaluators"
msgstr ""

#: of paddle.fluid.metrics.Accuracy paddle.fluid.metrics.Auc
#: paddle.fluid.metrics.EditDistance paddle.fluid.metrics.MetricBase
msgid "参数"
msgstr ""

#: of paddle.fluid.metrics.MetricBase:3
msgid ""
"The name of evaluator. such as, \"accuracy\". Used for generate temporary"
" variable name."
msgstr ""

#: of paddle.fluid.metrics.MetricBase:15
msgid "Interface:"
msgstr ""

#: of paddle.fluid.metrics.MetricBase:8
msgid "Note(*) : the states is the attributes who not has _ prefix."
msgstr ""

#: of paddle.fluid.metrics.MetricBase:10
msgid ""
"get_config(): print current states and configuration reset(): clear the "
"states. If the Metrics states type is not (int, float, np.ndarray),"
msgstr ""

#: of paddle.fluid.metrics.MetricBase:12
msgid "Please override this method."
msgstr ""

#: of paddle.fluid.metrics.MetricBase:13
msgid ""
"update(): update states at every minibatch eval(): get metric evaluation "
"in numpy type."
msgstr ""

#: of paddle.fluid.metrics.MetricBase.reset:1
msgid ""
"states is the attributes who not has _ prefix. reset the states of "
"metrics."
msgstr ""

#: ../../source/api_reference/metrics.rst:16
msgid "CompositeMetric"
msgstr ""

#: of paddle.fluid.metrics.CompositeMetric:1
msgid ""
"Compute multiple metrics in each minibatch. for example, merge F1, "
"accuracy, recall into one Metric."
msgstr ""

#: ../../source/api_reference/metrics.rst:23
msgid "Accuracy"
msgstr ""

#: of paddle.fluid.metrics.Accuracy:1
msgid ""
"Accumulate the accuracy from minibatches and compute the average accuracy"
" for every pass."
msgstr ""

#: of paddle.fluid.metrics.Accuracy:4 paddle.fluid.metrics.EditDistance:4
msgid "the metrics name"
msgstr ""

#: of paddle.fluid.metrics.Accuracy:7 paddle.fluid.metrics.EditDistance:7
msgid "Example"
msgstr ""

#: of paddle.fluid.metrics.Accuracy:8
msgid ""
"minibatch_accuracy = fluid.layers.accuracy(pred, label) "
"accuracy_evaluator = fluid.metrics.Accuracy() for epoch in PASS_NUM:"
msgstr ""

#: of paddle.fluid.metrics.Accuracy:11
msgid "accuracy_evaluator.reset() for data in batches:"
msgstr ""

#: of paddle.fluid.metrics.Accuracy:13
msgid "loss = exe.run(fetch_list=[cost, minibatch_accuracy])"
msgstr ""

#: of paddle.fluid.metrics.Accuracy:14
msgid ""
"accuracy_evaluator.update(value=minibatch_accuracy, weight=batches) "
"accuracy = accuracy_evaluator.eval()"
msgstr ""

#: ../../source/api_reference/metrics.rst:30
msgid "ChunkEvaluator"
msgstr ""

#: of paddle.fluid.metrics.ChunkEvaluator:1
msgid ""
"Accumulate counter numbers output by chunk_eval from mini-batches and "
"compute the precision recall and F1-score using the accumulated counter "
"numbers."
msgstr ""

#: ../../source/api_reference/metrics.rst:37
msgid "EditDistance"
msgstr ""

#: of paddle.fluid.metrics.EditDistance:1
msgid ""
"Accumulate edit distance sum and sequence number from mini-batches and "
"compute the average edit_distance and instance error of all batches."
msgstr ""

#: of paddle.fluid.metrics.EditDistance:8
msgid ""
"edit_distance_metrics = fluid.layers.edit_distance(input, label) "
"distance_evaluator = fluid.metrics.EditDistance() for epoch in PASS_NUM:"
msgstr ""

#: of paddle.fluid.metrics.EditDistance:11
msgid "distance_evaluator.reset() for data in batches:"
msgstr ""

#: of paddle.fluid.metrics.EditDistance:13
msgid "loss = exe.run(fetch_list=[cost] + list(edit_distance_metrics))"
msgstr ""

#: of paddle.fluid.metrics.EditDistance:14
msgid ""
"distance_evaluator.update(*edit_distance_metrics) distance, "
"instance_error = distance_evaluator.eval()"
msgstr ""

#: of paddle.fluid.metrics.EditDistance:17
msgid ""
"In the above example: 'distance' is the average of the edit distance in a"
" pass. 'instance_error' is the instance error rate in a pass."
msgstr ""

#: ../../source/api_reference/metrics.rst:44
msgid "DetectionMAP"
msgstr ""

#: of paddle.fluid.metrics.DetectionMAP:1
msgid "Calculate the detection mean average precision (mAP)."
msgstr ""

#: of paddle.fluid.metrics.DetectionMAP:3
msgid ""
"TODO (Dang Qingqing): update the following doc. The general steps are as "
"follows: 1. calculate the true positive and false positive according to "
"the input"
msgstr ""

#: of paddle.fluid.metrics.DetectionMAP:6
msgid "of detection and labels."
msgstr ""

#: of paddle.fluid.metrics.DetectionMAP:7
msgid "calculate mAP value, support two versions: '11 point' and 'integral'."
msgstr ""

#: of paddle.fluid.metrics.DetectionMAP:10
msgid "Please get more information from the following articles:"
msgstr ""

#: of paddle.fluid.metrics.DetectionMAP:10
msgid ""
"https://sanchom.wordpress.com/tag/average-precision/ "
"https://arxiv.org/abs/1512.02325"
msgstr ""

#: ../../source/api_reference/metrics.rst:51
msgid "Auc"
msgstr ""

#: of paddle.fluid.metrics.Auc:1
msgid ""
"Auc Metrics which adapts to binary classification. Need to note that auc "
"metrics compute the value via Python natively. If you concern the speed, "
"please use the fluid.layers.auc instead."
msgstr ""

#: of paddle.fluid.metrics.Auc:11
msgid "The `auc` function creates four local variables, `true_positives`,"
msgstr ""

#: of paddle.fluid.metrics.Auc:6
msgid ""
"`true_negatives`, `false_positives` and `false_negatives` that are used "
"to compute the AUC. To discretize the AUC curve, a linearly spaced set of"
" thresholds is used to compute pairs of recall and precision values. The "
"area under the ROC-curve is therefore computed using the height of the "
"recall values by the false positive rate, while the area under the PR-"
"curve is the computed using the height of the precision values by the "
"recall."
msgstr ""

#: of paddle.fluid.metrics.Auc:13
msgid "metric name"
msgstr ""

#: of paddle.fluid.metrics.Auc:14
msgid ""
"Specifies the name of the curve to be computed, 'ROC' [default] or 'PR' "
"for the Precision-Recall-curve."
msgstr ""

#: of paddle.fluid.metrics.Auc:16
msgid "The number of thresholds to use when discretizing the roc curve."
msgstr ""

#: of paddle.fluid.metrics.Auc:19
msgid "\"NOTE: only implement the ROC curve type via Python now.\""
msgstr ""

