# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, paddle-dev@baidu.com
# This file is distributed under the same license as the PaddlePaddle Fluid
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddlePaddle Fluid 0.13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-15 16:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api_reference/io.rst:6
msgid "fluid.io"
msgstr ""

#: ../../source/api_reference/io.rst:11
msgid "save_vars"
msgstr ""

#: of paddle.fluid.io.save_vars:1
msgid "Save variables to directory by executor."
msgstr ""

#: of paddle.fluid.io.load_inference_model paddle.fluid.io.load_vars
#: paddle.fluid.io.save_inference_model paddle.fluid.io.save_vars
msgid "参数"
msgstr ""

#: of paddle.fluid.io.save_vars:3
msgid "executor that save variable"
msgstr ""

#: of paddle.fluid.io.load_inference_model:3 paddle.fluid.io.load_vars:4
#: paddle.fluid.io.save_inference_model:4 paddle.fluid.io.save_vars:4
msgid "directory path"
msgstr ""

#: of paddle.fluid.io.load_vars:5 paddle.fluid.io.save_vars:5
msgid "program. If vars is None, then filter all variables in this"
msgstr ""

#: of paddle.fluid.io.save_vars:6
msgid ""
"program which fit `predicate`. Default default_main_program. :param "
"predicate: The Predicate describes a callable that returns a variable as "
"a bool. If it returns true, the corresponding input variable will be "
"saved. :param vars: variables need to be saved. If vars is specified, "
"program & predicate will be ignored :param filename: The name of a single"
" file that all vars are saved to."
msgstr ""

#: of paddle.fluid.io.save_vars:12
msgid "If it is None, save variables to separate files."
msgstr ""

#: of paddle.fluid.io.load_inference_model paddle.fluid.io.load_vars
#: paddle.fluid.io.save_inference_model paddle.fluid.io.save_vars
msgid "返回"
msgstr ""

#: of paddle.fluid.io.load_vars:14 paddle.fluid.io.save_inference_model:16
#: paddle.fluid.io.save_vars:14
msgid "None"
msgstr ""

#: ../../source/api_reference/io.rst:19
msgid "save_params"
msgstr ""

#: of paddle.fluid.io.save_params:1
msgid "Save all parameters to directory with executor."
msgstr ""

#: ../../source/api_reference/io.rst:27
msgid "save_persistables"
msgstr ""

#: of paddle.fluid.io.save_persistables:1
msgid "Save all persistables to directory with executor."
msgstr ""

#: ../../source/api_reference/io.rst:35
msgid "load_vars"
msgstr ""

#: of paddle.fluid.io.load_vars:1
msgid "Load variables from directory by executor."
msgstr ""

#: of paddle.fluid.io.load_vars:3
msgid "executor that load variable"
msgstr ""

#: of paddle.fluid.io.load_vars:6
msgid ""
"program which fit `predicate`. Default default_main_program(). :param "
"predicate: The Predicate describes a callable that returns a variable as "
"a bool. If it returns true, the corresponding input variable will be "
"loaded. :param vars: variables need to be loaded. If vars is specified, "
"program & predicate will be ignored :param filename: The name of the "
"single file that all vars are loaded from."
msgstr ""

#: of paddle.fluid.io.load_vars:12
msgid "If it is None, load variables from separate files."
msgstr ""

#: ../../source/api_reference/io.rst:43
msgid "load_params"
msgstr ""

#: of paddle.fluid.io.load_params:1
msgid "load all parameters from directory by executor."
msgstr ""

#: ../../source/api_reference/io.rst:51
msgid "load_persistables"
msgstr ""

#: of paddle.fluid.io.load_persistables:1
msgid "load all persistables from directory by executor."
msgstr ""

#: ../../source/api_reference/io.rst:59
msgid "save_inference_model"
msgstr ""

#: of paddle.fluid.io.save_inference_model:1
msgid ""
"Build a model especially for inference, and save it to directory by the "
"executor."
msgstr ""

#: of paddle.fluid.io.save_inference_model:5
msgid "Names of variables that need to be feeded data during inference"
msgstr ""

#: of paddle.fluid.io.save_inference_model:6
msgid "Variables from which we can get inference results."
msgstr ""

#: of paddle.fluid.io.save_inference_model:7
msgid "executor that save inference model"
msgstr ""

#: of paddle.fluid.io.save_inference_model:8
msgid ""
"original program, which will be pruned to build the inference model. "
"Default default_main_program()."
msgstr ""

#: of paddle.fluid.io.save_inference_model:10
msgid ""
"The name of file to save inference program. If not specified, default "
"filename `__model__` will be used."
msgstr ""

#: of paddle.fluid.io.save_inference_model:12
msgid ""
"The name of file to save parameters. It is used for the case that all "
"parameters are saved in a single binary file. If not specified, "
"parameters are considered saved in separate files."
msgstr ""

#: ../../source/api_reference/io.rst:67
msgid "load_inference_model"
msgstr ""

#: of paddle.fluid.io.load_inference_model:1
msgid "Load inference model from a directory"
msgstr ""

#: of paddle.fluid.io.load_inference_model:4
msgid "executor that load inference model"
msgstr ""

#: of paddle.fluid.io.load_inference_model:5
msgid ""
"The name of file to load inference program. If not specified, default "
"filename `__model__` will be used."
msgstr ""

#: of paddle.fluid.io.load_inference_model:7
msgid ""
"The name of file to load parameters. It is used for the case that all "
"parameters are saved in a single binary file. If not specified, "
"parameters are considered saved in separate files."
msgstr ""

#: of paddle.fluid.io.load_inference_model:11
msgid ""
"[program, feed_target_names, fetch_targets] program: program especially "
"for inference. feed_target_names: Names of variables that need to feed "
"data fetch_targets: Variables from which we can get inference results."
msgstr ""

#: ../../source/api_reference/io.rst:75
msgid "get_inference_program"
msgstr ""

#: ../../source/api_reference/io.rst:83
msgid "save_checkpoint"
msgstr ""

#: of paddle.fluid.io.save_checkpoint:1
msgid ""
"Save Checkpoint will save persistable LodTensor variables from "
"main_program in checkpoint directory, the directory named by serial "
"number from 0 to (n -1), save_checkpoint use LRU strategy to keep numbers"
" of checkpoint directory,  the numbers of checkpoint directory are "
"max_num_checkpoints at most, The interval between two saved checkpoints "
"must greater than save_interval_secs."
msgstr ""

#: of paddle.fluid.io.save_checkpoint:6
msgid ""
":param executor executor for save the value :param checkpoint_dir the "
"checkpoint directory :param trainer_id currect trainer id, if id is equal"
" to 0, the trainer is chief :param main_program   will save all variables"
" in program :param max_num_checkpoints will keep numbers of checkpoint "
"serials not bigger than max_num_checkpoints"
msgstr ""

#: ../../source/api_reference/io.rst:91
msgid "load_checkpoint"
msgstr ""

#: of paddle.fluid.io.load_checkpoint:1
msgid ""
"Load checkpoint from a directory by executor, it will find  the most "
"recent saved checkpoint file and load it auto."
msgstr ""

#: of paddle.fluid.io.load_checkpoint:4
msgid ""
":param executor executor for load the value :param checkpoint_dir  the "
"checkpoint directory :param serial the serial folder in checkpoint "
"directory will be load :param main_program  will load all variables in "
"program"
msgstr ""

#: ../../source/api_reference/io.rst:99
msgid "clean_checkpoint"
msgstr ""

#: of paddle.fluid.io.clean_checkpoint:1
msgid ""
"clean the checkpoint dir, when the train exits normally, the trainer will"
" call clean_checkpoint to delete checkpoint directory saved before. "
"delete_dir only works when the directory is empty, otherwise, OSError is "
"raised."
msgstr ""

#: of paddle.fluid.io.clean_checkpoint:4
msgid ":param checkpoint_dir :param delete_dir"
msgstr ""

#: ../../source/api_reference/io.rst:107
msgid "load_persist_vars_without_grad"
msgstr ""

#: of paddle.fluid.io.load_persist_vars_without_grad:1
msgid ""
"load_persist_vars_without_grad will load variables from a directory by an"
" executor, the variable named end with \"@GRAD\" will not be loaded."
msgstr ""

#: of paddle.fluid.io.load_persist_vars_without_grad:4
msgid ""
":param executor  executor for load the value :param dirname the "
"checkpoint directory :param program   will load all variables in program "
":param has_model_dir if has_model_dir is True, will load variables from  "
"sub directory named __model__"
msgstr ""

#: ../../source/api_reference/io.rst:115
msgid "save_persist_vars_without_grad"
msgstr ""

#: of paddle.fluid.io.save_persist_vars_without_grad:1
msgid ""
"save_persist_vars_without_grad  will save variables to a directory by an "
"executor, the variable named end with \"@GRAD\" will not be saved."
msgstr ""

#: of paddle.fluid.io.save_persist_vars_without_grad:4
msgid ""
":param executor  executor for load the value :param dirname the "
"checkpoint directory :param program   will load all variables in program"
msgstr ""

#: ../../source/api_reference/io.rst:123
msgid "get_latest_checkpoint_serial"
msgstr ""

#: of paddle.fluid.io.get_latest_checkpoint_serial:1
msgid ""
"get the latest file in checkpoint directory, the _SUCCESS file must exist"
" in the directory"
msgstr ""

#: of paddle.fluid.io.get_latest_checkpoint_serial:3
msgid ":param checkpoint_dir"
msgstr ""

#~ msgid "io"
#~ msgstr ""

